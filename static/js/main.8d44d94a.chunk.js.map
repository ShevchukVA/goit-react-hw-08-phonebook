{"version":3,"sources":["routes.js","components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/Header.js","components/Layout.js","hoc/withAuth.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","redux/store.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/auth/authReducer.js","redux/contacts/contactsReducer.js","redux/auth/authActions.js","components/loader/Loader.js","styles.module.css","redux/contacts/contactsActions.js"],"names":["path","lable","exact","component","lazy","private","restricted","connect","state","isLogin","authSelectors","className","styles","list","routes","map","route","key","to","link","activeClassName","activeLink","UserMenu","email","onLogout","text","Button","variant","onClick","defaultProps","getUserEmail","authOperations","logOut","AuthNav","activeText","Header","header","Layout","children","layout","line","withAuth","WrappedComponent","withRouter","props","Component","routeProps","render","App","this","onGetCurrentUser","fallback","Loader","getCurrentUser","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","massage","logIn","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","user","initialUserState","name","createReducer","_","payload","combineReducers","items","contactsActions","fetchContactsSuccess","action","addContactSuccess","removeContactSuccess","filter","contact","id","filterContacts","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","removeContactRequest","removeContactError","createAction","Spinner","type","color","height","width","module","exports"],"mappings":"mQAEe,GACb,CACEA,KAAM,IACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,iCAEFC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,GACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,iCAEFC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,SACNC,MAAO,GACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,iCAEFC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,uDAEFC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,GACNC,MAAO,GACPC,OAAO,EACPC,UAAWC,gBAAK,kBACd,iCAEFC,SAAS,EACTC,YAAY,I,gBCvBDC,eAFS,SAAAC,GAAK,MAAK,CAAEC,QAASC,IAAcD,QAAQD,MAEpDD,EArBI,SAAC,GAAD,IAAGE,EAAH,EAAGA,QAAH,OACjB,yBAAKE,UAAWC,IAAOC,MACpBC,EAAOC,KACN,SAAAC,GAAK,QACDA,EAAMX,SAAWI,IACjB,kBAAC,IAAD,CACEP,MAAOc,EAAMd,MACbe,IAAKD,EAAMhB,KACXkB,GAAIF,EAAMhB,KACVW,UAAWC,IAAOO,KAClBC,gBAAiBR,IAAOS,YAEvBL,EAAMf,c,SCZbqB,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACf,6BACE,0BAAMb,UAAWC,IAAOa,MAAxB,YAAwCF,GACxC,kBAACG,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAASJ,GAA7C,YAMJF,EAASO,aAAe,CACtBN,MAAO,IAQT,IAIehB,eAJS,SAAAC,GAAK,MAAK,CAChCe,MAAOb,IAAcoB,aAAatB,MAGI,CAAEgB,SAAUO,IAAeC,QAApDzB,CACbe,GCLaW,EArBC,kBACd,6BACE,kBAAC,IAAD,CACE/B,OAAK,EACLgB,GAAG,YACHP,UAAWC,IAAOa,KAClBL,gBAAiBR,IAAOsB,YAJ1B,YAQA,kBAAC,IAAD,CACEhC,OAAK,EACLgB,GAAG,SACHP,UAAWC,IAAOa,KAClBL,gBAAiBR,IAAOsB,YAJ1B,WCLEC,EAAS,SAAC,GAAD,IAAG1B,EAAH,EAAGA,QAAH,OACb,4BAAQE,UAAWC,IAAOwB,QACxB,kBAAC,EAAD,MACC3B,EAAU,kBAAC,EAAD,MAAe,kBAAC,EAAD,QAI9B0B,EAAON,aAAe,CACpBpB,QAAS,IAOX,IAIeF,eAJS,SAAAC,GAAK,MAAK,CAChCC,QAASC,IAAcD,QAAQD,MAGlBD,CAAyB4B,GCXzBE,EAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,yBAAK3B,UAAWC,IAAO2B,QACrB,kBAAC,EAAD,MACA,wBAAI5B,UAAWC,IAAO4B,OACrBF,I,gBCMUG,EAVE,SAAAC,GAOf,OAAOC,YAAWpC,aAFM,SAAAC,GAAK,MAAK,CAAEC,QAASC,IAAcD,QAAQD,MAEjDD,EANlB,SAAkBqC,GAChB,OAAO,kBAACF,EAAqBE,QCMlBH,KATM,SAAC,GAAD,IAAcI,EAAd,EAAG1C,UAAsBM,EAAzB,EAAyBA,QAAYqC,EAArC,8CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAH,GAAK,OACXnC,EAAU,kBAACoC,EAAcD,GAAY,kBAAC,IAAD,CAAU1B,GAAG,kBCczCuB,KAlBK,SAAC,GAAD,IACPI,EADO,EAClB1C,UACAM,EAFkB,EAElBA,QACAH,EAHkB,EAGlBA,WACGwC,EAJe,2DAMlB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAH,GAAK,OACXnC,GAAWH,EACT,kBAAC,IAAD,CAAUY,GAAG,cAEb,kBAAC2B,EAAcD,UCNjBI,E,kLAEFC,KAAKL,MAAMM,qB,+BAIX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAAC,IAAD,KACGtC,EAAOC,KAAI,SAAAC,GAAK,OACfA,EAAMX,QACJ,kBAAC,EAAD,eAAcY,IAAKD,EAAMf,OAAWe,IAEpC,kBAAC,EAAD,eAAaC,IAAKD,EAAMf,OAAWe,e,GAfnC6B,aA0BHtC,cAAQ,KAAM,CAC3B2C,iBAAkBnB,IAAesB,gBADpB9C,CAEZyC,G,gDCvBGM,EAAoB,CACxBrC,IAAK,OACLsC,YACAC,UAAW,CAAC,UAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,IACVC,KAAMC,YAAeT,EAAmBU,MAE1CC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAKnDC,EAAYC,YAAanB,G,OCzBtCoB,IAAS9B,OACP,kBAAC,IAAD,CAAUU,MAAOA,GACf,kBAAC,IAAD,CAAaqB,QAAS,KAAMH,UAAWA,GACrC,kBAAC,EAAD,QAGJI,SAASC,eAAe,U,gICX1BC,IAAMC,SAASC,QAAU,2CAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IA0DnC,GACbC,SAvDe,SAAAC,GAAW,OAAI,SAAAC,GAC9BA,EAASC,IAAYC,mBAErBX,IACGY,KAAK,gBAAiBJ,GACtBK,MAAK,SAAAC,GACJX,EAAUW,EAASC,KAAKZ,OACxBM,EAASC,IAAYM,gBAAgBF,EAASC,UAE/CE,OAAM,SAAAC,GAAK,OAAIT,EAASC,IAAYS,cAAcD,EAAME,eA+C3DC,MA5CY,SAAAb,GAAW,OAAI,SAAAC,GAC3BA,EAASC,IAAYY,gBAErBtB,IACGY,KAAK,eAAgBJ,GACrBK,MAAK,SAAAC,GACJX,EAAUW,EAASC,KAAKZ,OACxBM,EAASC,IAAYa,aAAaT,EAASC,UAE5CE,OAAM,SAAAC,GAAK,OAAIT,EAASC,IAAYc,WAAWN,EAAME,eAoCxDrE,OAfa,kBAAM,SAAA0D,GACnBA,EAASC,IAAYe,iBAErBzB,IACGY,KAAK,gBACLC,MAAK,WACJV,IACAM,EAASC,IAAYgB,oBAEtBT,OAAM,SAAAC,GAAK,OAAIT,EAASC,IAAYiB,YAAYT,SAOnD9C,eAlCqB,kBAAM,SAACqC,EAAUmB,GAAc,IAEnCC,EACbD,IADF/C,KAAQsB,MAGL0B,IAIL1B,EAAU0B,GACVpB,EAASC,IAAYoB,yBAErB9B,IACG+B,IAAI,kBACJlB,MAAK,gBAAGE,EAAH,EAAGA,KAAH,OAAcN,EAASC,IAAYsB,sBAAsBjB,OAC9DE,OAAM,SAAAC,GAAK,OAAIT,EAASC,IAAYuB,oBAAoBf,WCjD9C,G,MAAA,CAAE1F,QAJD,SAAAD,GAAK,OAAIA,EAAMsD,KAAKsB,OAIVtD,aAFL,SAAAtB,GAAK,OAAIA,EAAMsD,KAAKqD,KAAK5F,U,sECExC6F,EAAmB,CAAEC,KAAM,KAAM9F,MAAO,MAExC4F,EAAOG,YAAcF,GAAD,mBACvBzB,IAAYM,iBAAkB,SAACsB,EAAD,YAAMC,QAAsBL,QADnC,cAEvBxB,IAAYa,cAAe,SAACe,EAAD,YAAMC,QAAsBL,QAFhC,cAGvBxB,IAAYsB,uBAAwB,SAACM,EAAD,YAAMC,WAHnB,cAIvB7B,IAAYgB,eAAgB,kBAAMS,KAJX,IAOpBhC,EAAQkC,YAAc,MAAD,mBACxB3B,IAAYM,iBAAkB,SAACsB,EAAD,YAAMC,QAAsBpC,SADlC,cAExBO,IAAYa,cAAe,SAACe,EAAD,YAAMC,QAAsBpC,SAF/B,cAGxBO,IAAYgB,eAAgB,kBAAM,QAHV,IAMrBR,EAAQmB,YAAc,MAAD,mBACxB3B,IAAYC,iBAAkB,kBAAM,QADZ,cAExBD,IAAYS,eAAgB,SAACmB,EAAGC,GAAJ,OAAgBA,KAFpB,cAGxB7B,IAAYY,cAAe,kBAAM,QAHT,cAIxBZ,IAAYc,YAAa,SAACc,EAAGC,GAAJ,OAAgBA,KAJjB,cAKxB7B,IAAYuB,qBAAsB,SAACK,EAAGC,GAAJ,OAAgBA,KAL1B,cAMxB7B,IAAYiB,aAAc,SAACW,EAAGC,GAAJ,OAAgBA,KANlB,IASZC,gBAAgB,CAAEN,OAAM/B,QAAOe,W,4ECpBxCuB,EAAQJ,YAAc,IAAD,mBACxBK,IAAgBC,sBAAuB,SAACL,EAAGM,GAAJ,OAAeA,EAAOL,WADrC,cAExBG,IAAgBG,mBAAoB,SAACtH,EAAOqH,GAAR,4BAChCrH,GADgC,CAEnCqH,EAAOL,aAJgB,cAMxBG,IAAgBI,sBAVS,SAACvH,EAAOqH,GAClC,OAAOrH,EAAMwH,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,EAAOL,cAG5B,IASrBQ,EAASV,YAAc,GAAD,eACzBK,IAAgBQ,gBAAiB,SAACZ,EAAGM,GAAJ,OAAeA,EAAOL,YAGpD1C,EAAUwC,aAAc,GAAD,mBAC1BK,IAAgBS,sBAAuB,kBAAM,KADnB,cAE1BT,IAAgBC,sBAAuB,kBAAM,KAFnB,cAG1BD,IAAgBU,oBAAqB,kBAAM,KAHjB,cAI1BV,IAAgBW,mBAAoB,kBAAM,KAJhB,cAK1BX,IAAgBG,mBAAoB,kBAAM,KALhB,cAM1BH,IAAgBY,iBAAkB,kBAAM,KANd,cAO1BZ,IAAgBa,sBAAuB,kBAAM,KAPnB,cAQ1Bb,IAAgBI,sBAAuB,kBAAM,KARnB,cAS1BJ,IAAgBc,oBAAqB,kBAAM,KATjB,IAYdhB,gBAAgB,CAAEC,QAAOM,SAAQlD,a,+BCjChD,WAEMc,EAAkB8C,YAAa,wBAC/BzC,EAAkByC,YAAa,wBAC/BtC,EAAgBsC,YAAa,sBAE7BnC,EAAemC,YAAa,qBAC5BlC,EAAekC,YAAa,qBAC5BjC,EAAaiC,YAAa,mBAE1BhC,EAAgBgC,YAAa,sBAC7B/B,EAAgB+B,YAAa,sBAC7B9B,EAAc8B,YAAa,oBAE3B3B,EAAwB2B,YAAa,8BACrCzB,EAAwByB,YAAa,8BACrCxB,EAAsBwB,YAAa,4BAE1B,KACb9C,kBACAK,kBACAG,gBACAG,eACAC,eACAC,aACAC,gBACAC,gBACAC,cACAG,wBACAE,wBACAC,wB,gCC9BF,6DAMMyB,EAAU,WACd,OACE,yBAAKhI,UAAWC,IAAOkE,SACrB,kBAAC,IAAD,CAAQ8D,KAAK,YAAYC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,QAKnEJ,EAAQ9G,aAAe,CACrB+G,KAAM,QACNC,MAAO,SACPC,OAAQ,GACRC,MAAO,IAUMJ,O,uDC3BfK,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,WAAa,2BAA2B,OAAS,uBAAuB,KAAO,qBAAqB,WAAa,2BAA2B,QAAU,wBAAwB,MAAQ,sBAAsB,WAAa,2BAA2B,UAAY,0BAA0B,OAAS,yB,+BCDza,WAEMX,EAAoBI,YAAa,uBACjCZ,EAAoBY,YAAa,uBACjCH,EAAkBG,YAAa,qBAE/BN,EAAuBM,YAAa,yBACpCd,EAAuBc,YAAa,yBACpCL,EAAqBK,YAAa,uBAElCF,EAAuBE,YAAa,0BACpCX,EAAuBW,YAAa,0BACpCD,EAAqBC,YAAa,wBAElCP,EAAiBO,YAAa,2BAErB,KACbJ,oBACAR,oBACAS,kBACAH,uBACAR,uBACAS,qBACAG,uBACAT,uBACAU,qBACAN,oB","file":"static/js/main.8d44d94a.chunk.js","sourcesContent":["import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    lable: 'HomePage',\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import('./views/HomeView' /* webpackChunkName: 'home-view' */),\r\n    ),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    lable: '',\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import('./views/RegisterView' /* webpackChunkName: 'register-view' */),\r\n    ),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    lable: '',\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import('./views/LoginViews' /* webpackChunkName: 'login-view' */),\r\n    ),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    lable: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import('./views/ContactsViews' /* webpackChunkName: 'contacts-view' */),\r\n    ),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '',\r\n    lable: '',\r\n    exact: false,\r\n    component: lazy(() =>\r\n      import('./views/NotFound' /* webpackChunkName: 'not-found' */),\r\n    ),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nimport routes from '../routes';\r\nimport styles from '../styles.module.css';\r\n\r\nconst Navigation = ({ isLogin }) => (\r\n  <nav className={styles.list}>\r\n    {routes.map(\r\n      route =>\r\n        (!route.private || isLogin) && (\r\n          <NavLink\r\n            exact={route.exact}\r\n            key={route.path}\r\n            to={route.path}\r\n            className={styles.link}\r\n            activeClassName={styles.activeLink}\r\n          >\r\n            {route.lable}\r\n          </NavLink>\r\n        ),\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({ isLogin: authSelectors.isLogin(state) });\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../redux/auth';\r\nimport { Button } from 'react-bootstrap';\r\nimport styles from '../styles.module.css';\r\n\r\nconst UserMenu = ({ email, onLogout }) => (\r\n  <div>\r\n    <span className={styles.text}>Welcome, {email}</span>\r\n    <Button variant=\"outline-secondary\" onClick={onLogout}>\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nUserMenu.defaultProps = {\r\n  email: '',\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  email: PropTypes.string,\r\n  onLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  email: authSelectors.getUserEmail(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from '../styles.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      exact\r\n      to=\"/register\"\r\n      className={styles.text}\r\n      activeClassName={styles.activeText}\r\n    >\r\n      Register\r\n    </NavLink>\r\n    <NavLink\r\n      exact\r\n      to=\"/login\"\r\n      className={styles.text}\r\n      activeClassName={styles.activeText}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport styles from '../styles.module.css';\r\n\r\nconst Header = ({ isLogin }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isLogin ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nHeader.defaultProps = {\r\n  isLogin: '',\r\n};\r\n\r\nHeader.propTypes = {\r\n  isLogin: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport styles from '../styles.module.css';\r\n\r\nconst Layout = ({ children }) => (\r\n  <div className={styles.layout}>\r\n    <Header />\r\n    <hr className={styles.line} />\r\n    {children}\r\n  </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst withAuth = WrappedComponent => {\r\n  function WithAuth(props) {\r\n    return <WrappedComponent {...props} />;\r\n  }\r\n\r\n  const mapStateToProps = state => ({ isLogin: authSelectors.isLogin(state) });\r\n\r\n  return withRouter(connect(mapStateToProps)(WithAuth));\r\n};\r\n\r\nexport default withAuth;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport withAuth from '../hoc/withAuth';\r\n\r\nconst PrivateRoute = ({ component: Component, isLogin, ...routeProps }) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isLogin ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nexport default withAuth(PrivateRoute);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport withAuth from '../hoc/withAuth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isLogin,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isLogin && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default withAuth(PublicRoute);\r\n","import React, { Component, Suspense } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Layout from './Layout';\r\nimport routes from '../routes';\r\nimport Loader from './loader/Loader';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Layout>\r\n          <Suspense fallback={<Loader />}>\r\n            <Switch>\r\n              {routes.map(route =>\r\n                route.private ? (\r\n                  <PrivateRoute key={route.lable} {...route} />\r\n                ) : (\r\n                  <PublicRoute key={route.lable} {...route} />\r\n                ),\r\n              )}\r\n            </Switch>\r\n          </Suspense>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error.massage)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error.massage)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => dispatch(authActions.getCurrentUserError(error)));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post('users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  getCurrentUser,\r\n};\r\n","const isLogin = state => state.auth.token;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport default { isLogin, getUserEmail };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerRequest]: () => null,\r\n  [authActions.registerError]: (_, payload) => payload,\r\n  [authActions.loginRequest]: () => null,\r\n  [authActions.loginError]: (_, payload) => payload,\r\n  [authActions.getCurrentUserError]: (_, payload) => payload,\r\n  [authActions.logoutError]: (_, payload) => payload,\r\n});\r\n\r\nexport default combineReducers({ user, token, error });\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst handleRemoveContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (_, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [contactsActions.removeContactSuccess]: handleRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport styles from '../../styles.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={styles.loading}>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={200} width={200} />\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  type: 'Audio',\r\n  color: '000000',\r\n  height: 80,\r\n  width: 80,\r\n};\r\n\r\nSpinner.propTypes = {\r\n  type: PropTypes.string,\r\n  color: PropTypes.string,\r\n  height: PropTypes.number,\r\n  width: PropTypes.number,\r\n};\r\n\r\nexport default Spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__1AVBI\",\"line\":\"styles_line__3m_w6\",\"list\":\"styles_list__3EEzk\",\"link\":\"styles_link__1QaiC\",\"activeLink\":\"styles_activeLink__3VLWJ\",\"header\":\"styles_header__3iLsF\",\"text\":\"styles_text__3vPzx\",\"activeText\":\"styles_activeText__LITVF\",\"loading\":\"styles_loading__37MAP\",\"title\":\"styles_title__3qP25\",\"phoonebook\":\"styles_phoonebook__2ekGq\",\"container\":\"styles_container__11mBP\",\"status\":\"styles_status__3VMzg\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst filterContacts = createAction('contacts/filterContacts');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  filterContacts,\r\n};\r\n"],"sourceRoot":""}